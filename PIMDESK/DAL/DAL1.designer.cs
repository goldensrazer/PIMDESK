#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PIMDESK.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PIM")]
	public partial class DALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHAMADO(CHAMADO instance);
    partial void UpdateCHAMADO(CHAMADO instance);
    partial void DeleteCHAMADO(CHAMADO instance);
    partial void InsertCLIENTE(CLIENTE instance);
    partial void UpdateCLIENTE(CLIENTE instance);
    partial void DeleteCLIENTE(CLIENTE instance);
    partial void InsertDEPARTAMENTO(DEPARTAMENTO instance);
    partial void UpdateDEPARTAMENTO(DEPARTAMENTO instance);
    partial void DeleteDEPARTAMENTO(DEPARTAMENTO instance);
    partial void InsertFUNCIONARIO(FUNCIONARIO instance);
    partial void UpdateFUNCIONARIO(FUNCIONARIO instance);
    partial void DeleteFUNCIONARIO(FUNCIONARIO instance);
    partial void InsertGRAU_URGENCIA(GRAU_URGENCIA instance);
    partial void UpdateGRAU_URGENCIA(GRAU_URGENCIA instance);
    partial void DeleteGRAU_URGENCIA(GRAU_URGENCIA instance);
    partial void InsertSETOR(SETOR instance);
    partial void UpdateSETOR(SETOR instance);
    partial void DeleteSETOR(SETOR instance);
    #endregion
		
		public DALDataContext() : 
				base(global::PIMDESK.Properties.Settings.Default.PIMConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHAMADO> CHAMADOs
		{
			get
			{
				return this.GetTable<CHAMADO>();
			}
		}
		
		public System.Data.Linq.Table<CLIENTE> CLIENTEs
		{
			get
			{
				return this.GetTable<CLIENTE>();
			}
		}
		
		public System.Data.Linq.Table<DEPARTAMENTO> DEPARTAMENTOs
		{
			get
			{
				return this.GetTable<DEPARTAMENTO>();
			}
		}
		
		public System.Data.Linq.Table<FUNCIONARIO> FUNCIONARIOs
		{
			get
			{
				return this.GetTable<FUNCIONARIO>();
			}
		}
		
		public System.Data.Linq.Table<GRAU_URGENCIA> GRAU_URGENCIAs
		{
			get
			{
				return this.GetTable<GRAU_URGENCIA>();
			}
		}
		
		public System.Data.Linq.Table<SETOR> SETORs
		{
			get
			{
				return this.GetTable<SETOR>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHAMADO")]
	public partial class CHAMADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DEPARTAMENTO;
		
		private int _GRAU_URGENCIA;
		
		private string _TITULO;
		
		private string _DESCRICAO;
		
		private int _CLIENTE;
		
		private System.Nullable<int> _FUNCIONARIO;
		
		private System.Nullable<System.DateTime> _CONCLUSAO;
		
		private EntityRef<CLIENTE> _CLIENTE1;
		
		private EntityRef<DEPARTAMENTO> _DEPARTAMENTO1;
		
		private EntityRef<FUNCIONARIO> _FUNCIONARIO1;
		
		private EntityRef<GRAU_URGENCIA> _GRAU_URGENCIA1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDEPARTAMENTOChanging(int value);
    partial void OnDEPARTAMENTOChanged();
    partial void OnGRAU_URGENCIAChanging(int value);
    partial void OnGRAU_URGENCIAChanged();
    partial void OnTITULOChanging(string value);
    partial void OnTITULOChanged();
    partial void OnDESCRICAOChanging(string value);
    partial void OnDESCRICAOChanged();
    partial void OnCLIENTEChanging(int value);
    partial void OnCLIENTEChanged();
    partial void OnFUNCIONARIOChanging(System.Nullable<int> value);
    partial void OnFUNCIONARIOChanged();
    partial void OnCONCLUSAOChanging(System.Nullable<System.DateTime> value);
    partial void OnCONCLUSAOChanged();
    #endregion
		
		public CHAMADO()
		{
			this._CLIENTE1 = default(EntityRef<CLIENTE>);
			this._DEPARTAMENTO1 = default(EntityRef<DEPARTAMENTO>);
			this._FUNCIONARIO1 = default(EntityRef<FUNCIONARIO>);
			this._GRAU_URGENCIA1 = default(EntityRef<GRAU_URGENCIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTAMENTO", DbType="Int NOT NULL")]
		public int DEPARTAMENTO
		{
			get
			{
				return this._DEPARTAMENTO;
			}
			set
			{
				if ((this._DEPARTAMENTO != value))
				{
					if (this._DEPARTAMENTO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEPARTAMENTOChanging(value);
					this.SendPropertyChanging();
					this._DEPARTAMENTO = value;
					this.SendPropertyChanged("DEPARTAMENTO");
					this.OnDEPARTAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRAU_URGENCIA", DbType="Int NOT NULL")]
		public int GRAU_URGENCIA
		{
			get
			{
				return this._GRAU_URGENCIA;
			}
			set
			{
				if ((this._GRAU_URGENCIA != value))
				{
					if (this._GRAU_URGENCIA1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRAU_URGENCIAChanging(value);
					this.SendPropertyChanging();
					this._GRAU_URGENCIA = value;
					this.SendPropertyChanged("GRAU_URGENCIA");
					this.OnGRAU_URGENCIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TITULO", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TITULO
		{
			get
			{
				return this._TITULO;
			}
			set
			{
				if ((this._TITULO != value))
				{
					this.OnTITULOChanging(value);
					this.SendPropertyChanging();
					this._TITULO = value;
					this.SendPropertyChanged("TITULO");
					this.OnTITULOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRICAO", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string DESCRICAO
		{
			get
			{
				return this._DESCRICAO;
			}
			set
			{
				if ((this._DESCRICAO != value))
				{
					this.OnDESCRICAOChanging(value);
					this.SendPropertyChanging();
					this._DESCRICAO = value;
					this.SendPropertyChanged("DESCRICAO");
					this.OnDESCRICAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTE", DbType="Int NOT NULL")]
		public int CLIENTE
		{
			get
			{
				return this._CLIENTE;
			}
			set
			{
				if ((this._CLIENTE != value))
				{
					if (this._CLIENTE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLIENTEChanging(value);
					this.SendPropertyChanging();
					this._CLIENTE = value;
					this.SendPropertyChanged("CLIENTE");
					this.OnCLIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FUNCIONARIO", DbType="Int")]
		public System.Nullable<int> FUNCIONARIO
		{
			get
			{
				return this._FUNCIONARIO;
			}
			set
			{
				if ((this._FUNCIONARIO != value))
				{
					if (this._FUNCIONARIO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFUNCIONARIOChanging(value);
					this.SendPropertyChanging();
					this._FUNCIONARIO = value;
					this.SendPropertyChanged("FUNCIONARIO");
					this.OnFUNCIONARIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONCLUSAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> CONCLUSAO
		{
			get
			{
				return this._CONCLUSAO;
			}
			set
			{
				if ((this._CONCLUSAO != value))
				{
					this.OnCONCLUSAOChanging(value);
					this.SendPropertyChanging();
					this._CONCLUSAO = value;
					this.SendPropertyChanged("CONCLUSAO");
					this.OnCONCLUSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_CHAMADO", Storage="_CLIENTE1", ThisKey="CLIENTE", OtherKey="ID", IsForeignKey=true)]
		public CLIENTE CLIENTE1
		{
			get
			{
				return this._CLIENTE1.Entity;
			}
			set
			{
				CLIENTE previousValue = this._CLIENTE1.Entity;
				if (((previousValue != value) 
							|| (this._CLIENTE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENTE1.Entity = null;
						previousValue.CHAMADOs.Remove(this);
					}
					this._CLIENTE1.Entity = value;
					if ((value != null))
					{
						value.CHAMADOs.Add(this);
						this._CLIENTE = value.ID;
					}
					else
					{
						this._CLIENTE = default(int);
					}
					this.SendPropertyChanged("CLIENTE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTAMENTO_CHAMADO", Storage="_DEPARTAMENTO1", ThisKey="DEPARTAMENTO", OtherKey="ID", IsForeignKey=true)]
		public DEPARTAMENTO DEPARTAMENTO1
		{
			get
			{
				return this._DEPARTAMENTO1.Entity;
			}
			set
			{
				DEPARTAMENTO previousValue = this._DEPARTAMENTO1.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTAMENTO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTAMENTO1.Entity = null;
						previousValue.CHAMADOs.Remove(this);
					}
					this._DEPARTAMENTO1.Entity = value;
					if ((value != null))
					{
						value.CHAMADOs.Add(this);
						this._DEPARTAMENTO = value.ID;
					}
					else
					{
						this._DEPARTAMENTO = default(int);
					}
					this.SendPropertyChanged("DEPARTAMENTO1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCIONARIO_CHAMADO", Storage="_FUNCIONARIO1", ThisKey="FUNCIONARIO", OtherKey="ID", IsForeignKey=true)]
		public FUNCIONARIO FUNCIONARIO1
		{
			get
			{
				return this._FUNCIONARIO1.Entity;
			}
			set
			{
				FUNCIONARIO previousValue = this._FUNCIONARIO1.Entity;
				if (((previousValue != value) 
							|| (this._FUNCIONARIO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FUNCIONARIO1.Entity = null;
						previousValue.CHAMADOs.Remove(this);
					}
					this._FUNCIONARIO1.Entity = value;
					if ((value != null))
					{
						value.CHAMADOs.Add(this);
						this._FUNCIONARIO = value.ID;
					}
					else
					{
						this._FUNCIONARIO = default(Nullable<int>);
					}
					this.SendPropertyChanged("FUNCIONARIO1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRAU_URGENCIA_CHAMADO", Storage="_GRAU_URGENCIA1", ThisKey="GRAU_URGENCIA", OtherKey="ID", IsForeignKey=true)]
		public GRAU_URGENCIA GRAU_URGENCIA1
		{
			get
			{
				return this._GRAU_URGENCIA1.Entity;
			}
			set
			{
				GRAU_URGENCIA previousValue = this._GRAU_URGENCIA1.Entity;
				if (((previousValue != value) 
							|| (this._GRAU_URGENCIA1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRAU_URGENCIA1.Entity = null;
						previousValue.CHAMADOs.Remove(this);
					}
					this._GRAU_URGENCIA1.Entity = value;
					if ((value != null))
					{
						value.CHAMADOs.Add(this);
						this._GRAU_URGENCIA = value.ID;
					}
					else
					{
						this._GRAU_URGENCIA = default(int);
					}
					this.SendPropertyChanged("GRAU_URGENCIA1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENTE")]
	public partial class CLIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME;
		
		private string _EMAIL;
		
		private string _SENHA;
		
		private int _DEPARTAMENTO;
		
		private EntitySet<CHAMADO> _CHAMADOs;
		
		private EntityRef<DEPARTAMENTO> _DEPARTAMENTO1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSENHAChanging(string value);
    partial void OnSENHAChanged();
    partial void OnDEPARTAMENTOChanging(int value);
    partial void OnDEPARTAMENTOChanged();
    #endregion
		
		public CLIENTE()
		{
			this._CHAMADOs = new EntitySet<CHAMADO>(new Action<CHAMADO>(this.attach_CHAMADOs), new Action<CHAMADO>(this.detach_CHAMADOs));
			this._DEPARTAMENTO1 = default(EntityRef<DEPARTAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENHA", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string SENHA
		{
			get
			{
				return this._SENHA;
			}
			set
			{
				if ((this._SENHA != value))
				{
					this.OnSENHAChanging(value);
					this.SendPropertyChanging();
					this._SENHA = value;
					this.SendPropertyChanged("SENHA");
					this.OnSENHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTAMENTO", DbType="Int NOT NULL")]
		public int DEPARTAMENTO
		{
			get
			{
				return this._DEPARTAMENTO;
			}
			set
			{
				if ((this._DEPARTAMENTO != value))
				{
					if (this._DEPARTAMENTO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEPARTAMENTOChanging(value);
					this.SendPropertyChanging();
					this._DEPARTAMENTO = value;
					this.SendPropertyChanged("DEPARTAMENTO");
					this.OnDEPARTAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENTE_CHAMADO", Storage="_CHAMADOs", ThisKey="ID", OtherKey="CLIENTE")]
		public EntitySet<CHAMADO> CHAMADOs
		{
			get
			{
				return this._CHAMADOs;
			}
			set
			{
				this._CHAMADOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTAMENTO_CLIENTE", Storage="_DEPARTAMENTO1", ThisKey="DEPARTAMENTO", OtherKey="ID", IsForeignKey=true)]
		public DEPARTAMENTO DEPARTAMENTO1
		{
			get
			{
				return this._DEPARTAMENTO1.Entity;
			}
			set
			{
				DEPARTAMENTO previousValue = this._DEPARTAMENTO1.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTAMENTO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTAMENTO1.Entity = null;
						previousValue.CLIENTEs.Remove(this);
					}
					this._DEPARTAMENTO1.Entity = value;
					if ((value != null))
					{
						value.CLIENTEs.Add(this);
						this._DEPARTAMENTO = value.ID;
					}
					else
					{
						this._DEPARTAMENTO = default(int);
					}
					this.SendPropertyChanged("DEPARTAMENTO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE1 = this;
		}
		
		private void detach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.CLIENTE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPARTAMENTO")]
	public partial class DEPARTAMENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME;
		
		private System.Nullable<int> _SETOR;
		
		private EntitySet<CHAMADO> _CHAMADOs;
		
		private EntitySet<CLIENTE> _CLIENTEs;
		
		private EntitySet<FUNCIONARIO> _FUNCIONARIOs;
		
		private EntityRef<SETOR> _SETOR1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnSETORChanging(System.Nullable<int> value);
    partial void OnSETORChanged();
    #endregion
		
		public DEPARTAMENTO()
		{
			this._CHAMADOs = new EntitySet<CHAMADO>(new Action<CHAMADO>(this.attach_CHAMADOs), new Action<CHAMADO>(this.detach_CHAMADOs));
			this._CLIENTEs = new EntitySet<CLIENTE>(new Action<CLIENTE>(this.attach_CLIENTEs), new Action<CLIENTE>(this.detach_CLIENTEs));
			this._FUNCIONARIOs = new EntitySet<FUNCIONARIO>(new Action<FUNCIONARIO>(this.attach_FUNCIONARIOs), new Action<FUNCIONARIO>(this.detach_FUNCIONARIOs));
			this._SETOR1 = default(EntityRef<SETOR>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SETOR", DbType="Int")]
		public System.Nullable<int> SETOR
		{
			get
			{
				return this._SETOR;
			}
			set
			{
				if ((this._SETOR != value))
				{
					if (this._SETOR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSETORChanging(value);
					this.SendPropertyChanging();
					this._SETOR = value;
					this.SendPropertyChanged("SETOR");
					this.OnSETORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTAMENTO_CHAMADO", Storage="_CHAMADOs", ThisKey="ID", OtherKey="DEPARTAMENTO")]
		public EntitySet<CHAMADO> CHAMADOs
		{
			get
			{
				return this._CHAMADOs;
			}
			set
			{
				this._CHAMADOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTAMENTO_CLIENTE", Storage="_CLIENTEs", ThisKey="ID", OtherKey="DEPARTAMENTO")]
		public EntitySet<CLIENTE> CLIENTEs
		{
			get
			{
				return this._CLIENTEs;
			}
			set
			{
				this._CLIENTEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTAMENTO_FUNCIONARIO", Storage="_FUNCIONARIOs", ThisKey="ID", OtherKey="DEPARTAMENTO")]
		public EntitySet<FUNCIONARIO> FUNCIONARIOs
		{
			get
			{
				return this._FUNCIONARIOs;
			}
			set
			{
				this._FUNCIONARIOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SETOR_DEPARTAMENTO", Storage="_SETOR1", ThisKey="SETOR", OtherKey="ID", IsForeignKey=true)]
		public SETOR SETOR1
		{
			get
			{
				return this._SETOR1.Entity;
			}
			set
			{
				SETOR previousValue = this._SETOR1.Entity;
				if (((previousValue != value) 
							|| (this._SETOR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SETOR1.Entity = null;
						previousValue.DEPARTAMENTOs.Remove(this);
					}
					this._SETOR1.Entity = value;
					if ((value != null))
					{
						value.DEPARTAMENTOs.Add(this);
						this._SETOR = value.ID;
					}
					else
					{
						this._SETOR = default(Nullable<int>);
					}
					this.SendPropertyChanged("SETOR1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTAMENTO1 = this;
		}
		
		private void detach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTAMENTO1 = null;
		}
		
		private void attach_CLIENTEs(CLIENTE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTAMENTO1 = this;
		}
		
		private void detach_CLIENTEs(CLIENTE entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTAMENTO1 = null;
		}
		
		private void attach_FUNCIONARIOs(FUNCIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTAMENTO1 = this;
		}
		
		private void detach_FUNCIONARIOs(FUNCIONARIO entity)
		{
			this.SendPropertyChanging();
			entity.DEPARTAMENTO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FUNCIONARIO")]
	public partial class FUNCIONARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME;
		
		private string _EMAIL;
		
		private string _SENHA;
		
		private int _DEPARTAMENTO;
		
		private EntitySet<CHAMADO> _CHAMADOs;
		
		private EntityRef<DEPARTAMENTO> _DEPARTAMENTO1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSENHAChanging(string value);
    partial void OnSENHAChanged();
    partial void OnDEPARTAMENTOChanging(int value);
    partial void OnDEPARTAMENTOChanged();
    #endregion
		
		public FUNCIONARIO()
		{
			this._CHAMADOs = new EntitySet<CHAMADO>(new Action<CHAMADO>(this.attach_CHAMADOs), new Action<CHAMADO>(this.detach_CHAMADOs));
			this._DEPARTAMENTO1 = default(EntityRef<DEPARTAMENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SENHA", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string SENHA
		{
			get
			{
				return this._SENHA;
			}
			set
			{
				if ((this._SENHA != value))
				{
					this.OnSENHAChanging(value);
					this.SendPropertyChanging();
					this._SENHA = value;
					this.SendPropertyChanged("SENHA");
					this.OnSENHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEPARTAMENTO", DbType="Int NOT NULL")]
		public int DEPARTAMENTO
		{
			get
			{
				return this._DEPARTAMENTO;
			}
			set
			{
				if ((this._DEPARTAMENTO != value))
				{
					if (this._DEPARTAMENTO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEPARTAMENTOChanging(value);
					this.SendPropertyChanging();
					this._DEPARTAMENTO = value;
					this.SendPropertyChanged("DEPARTAMENTO");
					this.OnDEPARTAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FUNCIONARIO_CHAMADO", Storage="_CHAMADOs", ThisKey="ID", OtherKey="FUNCIONARIO")]
		public EntitySet<CHAMADO> CHAMADOs
		{
			get
			{
				return this._CHAMADOs;
			}
			set
			{
				this._CHAMADOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEPARTAMENTO_FUNCIONARIO", Storage="_DEPARTAMENTO1", ThisKey="DEPARTAMENTO", OtherKey="ID", IsForeignKey=true)]
		public DEPARTAMENTO DEPARTAMENTO1
		{
			get
			{
				return this._DEPARTAMENTO1.Entity;
			}
			set
			{
				DEPARTAMENTO previousValue = this._DEPARTAMENTO1.Entity;
				if (((previousValue != value) 
							|| (this._DEPARTAMENTO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEPARTAMENTO1.Entity = null;
						previousValue.FUNCIONARIOs.Remove(this);
					}
					this._DEPARTAMENTO1.Entity = value;
					if ((value != null))
					{
						value.FUNCIONARIOs.Add(this);
						this._DEPARTAMENTO = value.ID;
					}
					else
					{
						this._DEPARTAMENTO = default(int);
					}
					this.SendPropertyChanged("DEPARTAMENTO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.FUNCIONARIO1 = this;
		}
		
		private void detach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.FUNCIONARIO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRAU_URGENCIA")]
	public partial class GRAU_URGENCIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME;
		
		private EntitySet<CHAMADO> _CHAMADOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    #endregion
		
		public GRAU_URGENCIA()
		{
			this._CHAMADOs = new EntitySet<CHAMADO>(new Action<CHAMADO>(this.attach_CHAMADOs), new Action<CHAMADO>(this.detach_CHAMADOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRAU_URGENCIA_CHAMADO", Storage="_CHAMADOs", ThisKey="ID", OtherKey="GRAU_URGENCIA")]
		public EntitySet<CHAMADO> CHAMADOs
		{
			get
			{
				return this._CHAMADOs;
			}
			set
			{
				this._CHAMADOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.GRAU_URGENCIA1 = this;
		}
		
		private void detach_CHAMADOs(CHAMADO entity)
		{
			this.SendPropertyChanging();
			entity.GRAU_URGENCIA1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETOR")]
	public partial class SETOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOME;
		
		private EntitySet<DEPARTAMENTO> _DEPARTAMENTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMEChanging(string value);
    partial void OnNOMEChanged();
    #endregion
		
		public SETOR()
		{
			this._DEPARTAMENTOs = new EntitySet<DEPARTAMENTO>(new Action<DEPARTAMENTO>(this.attach_DEPARTAMENTOs), new Action<DEPARTAMENTO>(this.detach_DEPARTAMENTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NOME
		{
			get
			{
				return this._NOME;
			}
			set
			{
				if ((this._NOME != value))
				{
					this.OnNOMEChanging(value);
					this.SendPropertyChanging();
					this._NOME = value;
					this.SendPropertyChanged("NOME");
					this.OnNOMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SETOR_DEPARTAMENTO", Storage="_DEPARTAMENTOs", ThisKey="ID", OtherKey="SETOR")]
		public EntitySet<DEPARTAMENTO> DEPARTAMENTOs
		{
			get
			{
				return this._DEPARTAMENTOs;
			}
			set
			{
				this._DEPARTAMENTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEPARTAMENTOs(DEPARTAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SETOR1 = this;
		}
		
		private void detach_DEPARTAMENTOs(DEPARTAMENTO entity)
		{
			this.SendPropertyChanging();
			entity.SETOR1 = null;
		}
	}
}
#pragma warning restore 1591
